name: TS compilation

concurrency:
  group: wf-${{github.event.pull_request.number || github.sha}}-${{github.workflow}}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches:
      - "[0-9][0-9].[0-9].[0-9]*"

jobs:
  Angular:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: Get sources
      uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3

    - name: Restore npm cache
      uses: actions/cache@v3
      with:
        path: ./Angular/node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-modules

    - name: Run npm install
      working-directory: Angular
      run: npm install --no-audit --no-fund

    - name: TSC Angular
      working-directory: Angular
      run: npm run build

  React:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: Get sources
      uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3

    - name: Restore npm cache
      uses: actions/cache@v3
      with:
        path: ./React/node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-modules

    - name: Run npm install
      working-directory: React
      run: npm install --no-audit --no-fund

    - name: TSC React
      working-directory: React
      run: npm run build

  Vue:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: Get sources
      uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3

    - name: Restore npm cache
      uses: actions/cache@v3
      with:
        path: ./Vue/node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-modules

    - name: Run npm install
      working-directory: Vue
      run: npm install --no-audit --no-fund

    - name: TSC Vue
      working-directory: Vue
      run: npm run type-check
